#nullable enable
Silk.NET.Input.Extensions.CaptureExtensions
Silk.NET.Input.Extensions.GamepadState
Silk.NET.Input.Extensions.GamepadState.Deadzone.get -> Silk.NET.Input.Deadzone
Silk.NET.Input.Extensions.GamepadState.Dispose() -> void
Silk.NET.Input.Extensions.GamepadState.GetButtons() -> System.Span<Silk.NET.Input.Button>
Silk.NET.Input.Extensions.GamepadState.GetThumbsticks() -> System.Span<Silk.NET.Input.Thumbstick>
Silk.NET.Input.Extensions.GamepadState.GetTriggers() -> System.Span<Silk.NET.Input.Trigger>
Silk.NET.Input.Extensions.GamepadState.Index.get -> int
Silk.NET.Input.Extensions.GamepadState.IsConnected.get -> bool
Silk.NET.Input.Extensions.InputSnapshot
Silk.NET.Input.Extensions.InputSnapshot.Dispose() -> void
Silk.NET.Input.Extensions.JoystickState
Silk.NET.Input.Extensions.JoystickState.Deadzone.get -> Silk.NET.Input.Deadzone
Silk.NET.Input.Extensions.JoystickState.Dispose() -> void
Silk.NET.Input.Extensions.JoystickState.GetAxes() -> System.Span<Silk.NET.Input.Axis>
Silk.NET.Input.Extensions.JoystickState.GetButtons() -> System.Span<Silk.NET.Input.Button>
Silk.NET.Input.Extensions.JoystickState.GetHats() -> System.Span<Silk.NET.Input.Hat>
Silk.NET.Input.Extensions.JoystickState.Index.get -> int
Silk.NET.Input.Extensions.JoystickState.IsConnected.get -> bool
Silk.NET.Input.Extensions.KeyboardState
Silk.NET.Input.Extensions.KeyboardState.Dispose() -> void
Silk.NET.Input.Extensions.KeyboardState.GetPressedKeys() -> System.Span<Silk.NET.Input.Key>
Silk.NET.Input.Extensions.KeyboardState.GetSupportedKeys() -> System.Span<Silk.NET.Input.Key>
Silk.NET.Input.Extensions.KeyboardState.Index.get -> int
Silk.NET.Input.Extensions.KeyboardState.IsConnected.get -> bool
Silk.NET.Input.Extensions.KeyboardState.IsKeyPressed(Silk.NET.Input.Key key) -> bool
Silk.NET.Input.Extensions.MouseState
Silk.NET.Input.Extensions.MouseState.Dispose() -> void
Silk.NET.Input.Extensions.MouseState.GetPressedButtons() -> System.Span<Silk.NET.Input.MouseButton>
Silk.NET.Input.Extensions.MouseState.GetScrollWheels() -> System.Span<Silk.NET.Input.ScrollWheel>
Silk.NET.Input.Extensions.MouseState.GetSupportedButtons() -> System.Span<Silk.NET.Input.MouseButton>
Silk.NET.Input.Extensions.MouseState.Index.get -> int
Silk.NET.Input.Extensions.MouseState.IsButtonPressed(Silk.NET.Input.MouseButton btn) -> bool
Silk.NET.Input.Extensions.MouseState.IsConnected.get -> bool
Silk.NET.Input.Extensions.MouseState.Position.get -> System.Numerics.Vector2
~Silk.NET.Input.Extensions.GamepadState.Name.get -> string
~Silk.NET.Input.Extensions.InputSnapshot.Gamepads.get -> Silk.NET.Input.Extensions.GamepadState[]
~Silk.NET.Input.Extensions.InputSnapshot.Joysticks.get -> Silk.NET.Input.Extensions.JoystickState[]
~Silk.NET.Input.Extensions.InputSnapshot.Keyboards.get -> Silk.NET.Input.Extensions.KeyboardState[]
~Silk.NET.Input.Extensions.InputSnapshot.Mice.get -> Silk.NET.Input.Extensions.MouseState[]
~Silk.NET.Input.Extensions.JoystickState.Name.get -> string
~Silk.NET.Input.Extensions.KeyboardState.Name.get -> string
~Silk.NET.Input.Extensions.MouseState.Name.get -> string
~static Silk.NET.Input.Extensions.CaptureExtensions.CaptureState(this Silk.NET.Input.IGamepad obj, System.Buffers.MemoryPool<byte>? memoryPool = null) -> Silk.NET.Input.Extensions.GamepadState
~static Silk.NET.Input.Extensions.CaptureExtensions.CaptureState(this Silk.NET.Input.IInputContext obj, System.Buffers.MemoryPool<byte>? memoryPool = null) -> Silk.NET.Input.Extensions.InputSnapshot
~static Silk.NET.Input.Extensions.CaptureExtensions.CaptureState(this Silk.NET.Input.IJoystick obj, System.Buffers.MemoryPool<byte>? memoryPool = null) -> Silk.NET.Input.Extensions.JoystickState
~static Silk.NET.Input.Extensions.CaptureExtensions.CaptureState(this Silk.NET.Input.IKeyboard obj, System.Buffers.MemoryPool<byte>? memoryPool = null) -> Silk.NET.Input.Extensions.KeyboardState
~static Silk.NET.Input.Extensions.CaptureExtensions.CaptureState(this Silk.NET.Input.IMouse obj, System.Buffers.MemoryPool<byte>? memoryPool = null) -> Silk.NET.Input.Extensions.MouseState
